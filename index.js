// Generated by CoffeeScript 1.9.1
(function() {
  var GoogleSpreadsheet, _, async, fetchAndSave, fs, getSheetInfo;

  _ = require("lodash");

  async = require("async");

  fs = require("fs");

  GoogleSpreadsheet = require("google-spreadsheet");

  getSheetInfo = function(sheetId, auth, callback) {
    var sheet;
    sheet = new GoogleSpreadsheet(sheetId);
    if (auth) {
      return async.waterfall([
        function(cb) {
          return sheet.setAuth(auth.username, auth.pass, cb);
        }, function(auth, cb) {
          return sheet.getInfo(cb);
        }
      ], callback);
    } else {
      return sheet.getInfo(callback);
    }
  };

  fetchAndSave = function(sheetInfo, title, dest, transform, callback) {
    var sheets;
    sheets = _.filter(sheetInfo.worksheets, {
      title: title
    });
    return async.map(sheets, function(sheet, cb) {
      return sheet.getRows(cb);
    }, function(err, datas) {
      var output;
      datas = _.map(datas, transform);
      if (sheets.length === 1) {
        output = datas[0];
      } else {
        output = datas;
      }
      return fs.writeFile(dest, JSON.stringify(output, null, "  "), callback);
    });
  };

  module.exports = function(arg) {
    var auth, callback, infos, sheetId;
    sheetId = arg.sheetId, auth = arg.auth, infos = arg.infos, callback = arg.callback;
    infos = _.flatten([infos], true);
    return async.waterfall([
      function(cb) {
        return getSheetInfo(sheetId, auth, cb);
      }, function(sheetInfo, cb) {
        return async.map(_.map(infos), function(info, cb) {
          return fetchAndSave(sheetInfo, info.title, info.dest, info.transform, cb);
        }, cb);
      }
    ], callback);
  };

}).call(this);
